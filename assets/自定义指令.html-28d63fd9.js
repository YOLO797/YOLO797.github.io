import{_ as n,W as a,X as s,Y as e,a1 as c}from"./framework-b609eea8.js";const o={},t=c(`<h3 id="_1-注册自定义指令" tabindex="-1"><a class="header-anchor" href="#_1-注册自定义指令" aria-hidden="true">#</a> 1. 注册自定义指令</h3><h4 id="_1-1-全局注册" tabindex="-1"><a class="header-anchor" href="#_1-1-全局注册" aria-hidden="true">#</a> 1.1 全局注册</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// main.js</span>
<span class="token comment">// 注册一个全局自定义指令 v-focus</span>
Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">&#39;focus&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// 当被绑定的元素插入到 DOM 中</span>
  <span class="token function-variable function">inserted</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第一个参数：指令的名字（不需要写 <code>v-</code>前缀）</li><li>第二个参数：对象数据 / 指令函数</li></ul><h4 id="_1-2-局部注册" tabindex="-1"><a class="header-anchor" href="#_1-2-局部注册" aria-hidden="true">#</a> 1.2 局部注册</h4><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span><span class="token punctuation">{</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">//注册局部指令，组件中需接受一个 \`directives\` 的选项</span>
    <span class="token literal-property property">directives</span><span class="token operator">:</span><span class="token punctuation">{</span> 
      <span class="token literal-property property">focus</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token comment">//shadow为指令名，可自定义</span>
        <span class="token function">inserted</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//inserted里写元素添加focus指令后发生什么变化</span>
          el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-钩子函数" tabindex="-1"><a class="header-anchor" href="#_2-钩子函数" aria-hidden="true">#</a> 2. 钩子函数</h3><h4 id="_2-1-钩子函数" tabindex="-1"><a class="header-anchor" href="#_2-1-钩子函数" aria-hidden="true">#</a> 2.1 钩子函数：</h4><ul><li><code>bind</code>：只调用一次，指令第一次绑定到元素时调用</li><li><code>inserted</code>：被绑定元素插入父元素时调用</li><li><code>update</code>：所在组件的 <code>VNode</code>更新时调用</li><li><code>componentUpdated</code>：指令所在组件的 <code>VNode</code> 以及子 <code>VNode</code> 全部更新时调用</li><li><code>unbind</code>：只调用一次，指令与元素解绑时调用</li></ul><h4 id="_2-2-钩子函数参数" tabindex="-1"><a class="header-anchor" href="#_2-2-钩子函数参数" aria-hidden="true">#</a> 2.2 钩子函数参数：</h4><ul><li><code>el</code>：指令所绑定的元素，可以用来直接操作<code>DOM</code></li><li><code>binding</code>：一个对象，包含以下属性 <ul><li><code>name</code>：指令名</li><li><code>value</code>：指令的绑定值，如：<code>v-my-directive=&#39;{color:red}&#39;</code>，绑定值为 <code>{color:red}</code></li><li><code>oldValue</code>：指令绑定的前一个值，仅在 <code>update</code> 和 <code>componentUpdated</code>钩子中可用</li><li><code>expression</code>：字符串形式的指令表达式</li><li><code>arg</code>：传给指令的参数，可选。如：<code>v-my-directive= foo</code>，参数为 <code>foo</code></li></ul></li><li><code>vnode</code>：编译生成的虚拟节点</li><li><code>oldValue</code>：上一个虚拟节点，仅在 <code>update</code> 和 <code>componentUpdated</code>钩子中可用</li></ul>`,11);function i(p,l){return a(),s("div",null,[e(" more "),t])}const u=n(o,[["render",i],["__file","自定义指令.html.vue"]]);export{u as default};
